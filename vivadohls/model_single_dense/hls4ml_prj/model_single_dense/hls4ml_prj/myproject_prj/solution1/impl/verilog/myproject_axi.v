// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.367000,HLS_SYN_LAT=45,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=50,HLS_SYN_FF=8854,HLS_SYN_LUT=8013,HLS_VERSION=2019_2}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TLAST
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_state11 = 11'd4;
parameter    ap_ST_fsm_state12 = 11'd8;
parameter    ap_ST_fsm_state13 = 11'd16;
parameter    ap_ST_fsm_state14 = 11'd32;
parameter    ap_ST_fsm_state15 = 11'd64;
parameter    ap_ST_fsm_state16 = 11'd128;
parameter    ap_ST_fsm_state17 = 11'd256;
parameter    ap_ST_fsm_pp1_stage0 = 11'd512;
parameter    ap_ST_fsm_state28 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [0:0] out_r_TLAST;

reg in_r_TREADY;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln19_fu_238_p2;
reg    out_r_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter8;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln27_reg_1211;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter7_reg;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter8_reg;
reg   [0:0] is_last_0_reg_196;
reg   [4:0] i_0_reg_208;
reg   [2:0] i2_0_reg_219;
reg   [0:0] icmp_ln19_reg_1030;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter1_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter2_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter3_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter4_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter5_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter6_reg;
reg   [0:0] icmp_ln19_reg_1030_pp0_iter7_reg;
wire   [4:0] i_fu_244_p2;
reg   [31:0] in_data_tmp_reg_1039;
reg   [31:0] in_data_tmp_reg_1039_pp0_iter1_reg;
reg   [31:0] in_data_tmp_reg_1039_pp0_iter2_reg;
reg   [31:0] in_data_tmp_reg_1039_pp0_iter3_reg;
wire   [3:0] trunc_ln203_fu_259_p1;
reg   [3:0] trunc_ln203_reg_1045;
reg   [3:0] trunc_ln203_reg_1045_pp0_iter1_reg;
reg   [3:0] trunc_ln203_reg_1045_pp0_iter2_reg;
reg   [3:0] trunc_ln203_reg_1045_pp0_iter3_reg;
reg   [3:0] trunc_ln203_reg_1045_pp0_iter4_reg;
reg   [3:0] trunc_ln203_reg_1045_pp0_iter5_reg;
wire   [0:0] is_last_fu_263_p2;
reg   [0:0] is_last_reg_1050;
wire   [62:0] trunc_ln556_fu_273_p1;
reg   [62:0] trunc_ln556_reg_1055;
reg   [0:0] p_Result_8_reg_1060;
reg   [10:0] exp_tmp_V_reg_1065;
wire   [51:0] trunc_ln565_fu_295_p1;
reg   [51:0] trunc_ln565_reg_1070;
wire   [53:0] man_V_2_fu_319_p3;
reg   [53:0] man_V_2_reg_1075;
wire   [0:0] icmp_ln571_fu_326_p2;
reg   [0:0] icmp_ln571_reg_1080;
reg   [0:0] icmp_ln571_reg_1080_pp0_iter4_reg;
wire   [0:0] icmp_ln581_fu_337_p2;
reg   [0:0] icmp_ln581_reg_1086;
wire  signed [11:0] sh_amt_fu_355_p3;
reg  signed [11:0] sh_amt_reg_1092;
wire   [0:0] icmp_ln582_fu_363_p2;
reg   [0:0] icmp_ln582_reg_1098;
reg   [0:0] icmp_ln582_reg_1098_pp0_iter4_reg;
wire   [15:0] trunc_ln583_fu_369_p1;
reg   [15:0] trunc_ln583_reg_1104;
reg   [15:0] trunc_ln583_reg_1104_pp0_iter4_reg;
reg   [15:0] trunc_ln583_reg_1104_pp0_iter5_reg;
reg   [7:0] tmp_4_reg_1110;
wire  signed [31:0] sext_ln581_fu_383_p1;
reg  signed [31:0] sext_ln581_reg_1115;
reg  signed [31:0] sext_ln581_reg_1115_pp0_iter5_reg;
wire   [0:0] and_ln585_fu_445_p2;
reg   [0:0] and_ln585_reg_1125;
wire   [0:0] and_ln603_fu_468_p2;
reg   [0:0] and_ln603_reg_1130;
reg   [0:0] and_ln603_reg_1130_pp0_iter5_reg;
wire   [0:0] or_ln603_fu_474_p2;
reg   [0:0] or_ln603_reg_1135;
reg   [0:0] or_ln603_reg_1135_pp0_iter5_reg;
wire   [15:0] select_ln603_1_fu_480_p3;
reg   [15:0] select_ln603_1_reg_1141;
reg   [15:0] select_ln603_1_reg_1141_pp0_iter5_reg;
wire   [53:0] grp_fu_400_p2;
reg   [53:0] ashr_ln586_reg_1146;
wire   [0:0] or_ln603_2_fu_502_p2;
reg   [0:0] or_ln603_2_reg_1151;
reg   [0:0] or_ln603_2_reg_1151_pp0_iter6_reg;
wire   [15:0] select_ln603_2_fu_525_p3;
reg   [15:0] select_ln603_2_reg_1156;
wire   [7:0] shl_ln_fu_531_p3;
reg   [7:0] shl_ln_reg_1161;
wire   [7:0] empty_32_fu_538_p2;
reg   [7:0] empty_32_reg_1166;
wire   [0:0] icmp_ln203_fu_544_p2;
reg   [0:0] icmp_ln203_reg_1171;
reg   [0:0] icmp_ln203_reg_1171_pp0_iter7_reg;
wire   [255:0] shl_ln203_fu_611_p2;
reg   [255:0] shl_ln203_reg_1179;
wire   [255:0] and_ln203_fu_629_p2;
reg   [255:0] and_ln203_reg_1185;
reg   [15:0] out_local_0_V_reg_1191;
wire    ap_CS_fsm_state17;
reg   [15:0] out_local_1_V_reg_1196;
reg   [15:0] out_local_2_V_reg_1201;
reg   [15:0] out_local_3_V_reg_1206;
wire   [0:0] icmp_ln27_fu_696_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
wire    ap_block_state23_pp1_stage0_iter5;
wire    ap_block_state24_pp1_stage0_iter6;
wire    ap_block_state25_pp1_stage0_iter7;
wire    ap_block_state26_pp1_stage0_iter8;
reg    ap_block_state26_io;
wire    ap_block_state27_pp1_stage0_iter9;
reg    ap_block_state27_io;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter1_reg;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter2_reg;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter3_reg;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter4_reg;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter5_reg;
reg   [0:0] icmp_ln27_reg_1211_pp1_iter6_reg;
wire   [2:0] i_1_fu_702_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [15:0] tmp_V_3_fu_712_p6;
reg   [15:0] tmp_V_3_reg_1220;
reg   [0:0] p_Result_10_reg_1226;
reg   [0:0] p_Result_10_reg_1226_pp1_iter1_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter2_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter3_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter4_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter5_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter6_reg;
reg   [0:0] p_Result_10_reg_1226_pp1_iter7_reg;
wire   [15:0] tmp_V_fu_730_p2;
reg   [15:0] tmp_V_reg_1232;
wire   [0:0] and_ln30_fu_742_p2;
reg   [0:0] and_ln30_reg_1237;
reg   [0:0] and_ln30_reg_1237_pp1_iter1_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter2_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter3_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter4_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter5_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter6_reg;
reg   [0:0] and_ln30_reg_1237_pp1_iter7_reg;
wire   [0:0] icmp_ln935_fu_748_p2;
reg   [0:0] icmp_ln935_reg_1242;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter2_reg;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter3_reg;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter4_reg;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter5_reg;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter6_reg;
reg   [0:0] icmp_ln935_reg_1242_pp1_iter7_reg;
wire   [15:0] tmp_V_4_fu_753_p3;
reg   [15:0] tmp_V_4_reg_1247;
reg   [15:0] tmp_V_4_reg_1247_pp1_iter2_reg;
reg   [15:0] tmp_V_4_reg_1247_pp1_iter3_reg;
reg   [31:0] l_fu_776_p3;
reg   [31:0] l_reg_1255;
wire   [7:0] trunc_ln943_fu_784_p1;
reg   [7:0] trunc_ln943_reg_1260;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter2_reg;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter3_reg;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter4_reg;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter5_reg;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter6_reg;
reg   [7:0] trunc_ln943_reg_1260_pp1_iter7_reg;
wire   [31:0] sub_ln944_fu_788_p2;
reg   [31:0] sub_ln944_reg_1265;
wire   [15:0] trunc_ln944_fu_793_p1;
reg   [15:0] trunc_ln944_reg_1272;
reg   [15:0] trunc_ln944_reg_1272_pp1_iter3_reg;
wire   [4:0] sub_ln947_fu_801_p2;
reg   [4:0] sub_ln947_reg_1277;
wire   [31:0] lsb_index_fu_807_p2;
reg   [31:0] lsb_index_reg_1282;
reg   [30:0] tmp_8_reg_1288;
wire   [0:0] icmp_ln947_1_fu_836_p2;
reg   [0:0] icmp_ln947_1_reg_1293;
wire   [31:0] add_ln958_fu_842_p2;
reg   [31:0] add_ln958_reg_1298;
wire   [31:0] sub_ln958_fu_847_p2;
reg   [31:0] sub_ln958_reg_1303;
wire   [31:0] or_ln_fu_899_p3;
reg   [31:0] or_ln_reg_1308;
reg   [31:0] or_ln_reg_1308_pp1_iter5_reg;
wire   [0:0] icmp_ln958_fu_913_p2;
reg   [0:0] icmp_ln958_reg_1323;
reg   [0:0] icmp_ln958_reg_1323_pp1_iter5_reg;
wire   [31:0] grp_fu_918_p2;
reg   [31:0] lshr_ln958_reg_1333;
wire   [63:0] grp_fu_926_p2;
reg   [63:0] shl_ln958_reg_1338;
reg   [62:0] m_5_reg_1343;
reg   [62:0] m_5_reg_1343_pp1_iter7_reg;
reg   [0:0] tmp_10_reg_1348;
wire   [7:0] select_ln964_fu_968_p3;
reg   [7:0] select_ln964_reg_1353;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
wire    grp_myproject_fu_230_ap_start;
wire    grp_myproject_fu_230_ap_done;
wire    grp_myproject_fu_230_ap_idle;
wire    grp_myproject_fu_230_ap_ready;
wire   [15:0] grp_myproject_fu_230_ap_return_0;
wire   [15:0] grp_myproject_fu_230_ap_return_1;
wire   [15:0] grp_myproject_fu_230_ap_return_2;
wire   [15:0] grp_myproject_fu_230_ap_return_3;
wire    grp_myproject_fu_230_dense_input_V_blk_n;
reg   [0:0] ap_phi_mux_is_last_0_phi_fu_200_p4;
reg    grp_myproject_fu_230_ap_start_reg;
reg   [10:0] ap_NS_fsm;
wire    ap_NS_fsm_state11;
reg   [255:0] in_local_V_fu_174;
wire    ap_CS_fsm_state11;
wire   [255:0] in_local_V_1_fu_669_p2;
wire    ap_block_pp1_stage0_01001;
wire   [63:0] grp_fu_235_p1;
wire   [63:0] ireg_V_fu_269_p1;
wire   [52:0] tmp_s_fu_302_p3;
wire   [53:0] p_Result_9_fu_309_p1;
wire   [53:0] man_V_1_fu_313_p2;
wire   [11:0] zext_ln461_fu_299_p1;
wire   [11:0] F2_fu_331_p2;
wire   [11:0] add_ln581_fu_343_p2;
wire   [11:0] sub_ln581_fu_349_p2;
wire   [53:0] grp_fu_400_p1;
wire   [31:0] bitcast_ln696_fu_405_p1;
wire   [0:0] tmp_5_fu_408_p3;
wire   [0:0] or_ln582_fu_424_p2;
wire   [0:0] xor_ln582_fu_428_p2;
wire   [0:0] icmp_ln585_fu_386_p2;
wire   [0:0] and_ln581_fu_434_p2;
wire   [0:0] xor_ln585_fu_439_p2;
wire   [0:0] or_ln581_fu_457_p2;
wire   [0:0] icmp_ln603_fu_391_p2;
wire   [0:0] xor_ln581_fu_462_p2;
wire   [0:0] and_ln585_1_fu_451_p2;
wire   [15:0] select_ln588_fu_416_p3;
wire   [0:0] xor_ln571_fu_487_p2;
wire   [0:0] and_ln582_fu_492_p2;
wire   [0:0] or_ln603_1_fu_497_p2;
wire   [15:0] sext_ln581cast_fu_510_p1;
wire   [15:0] shl_ln604_fu_513_p2;
wire   [15:0] trunc_ln586_fu_507_p1;
wire   [15:0] select_ln603_fu_518_p3;
wire   [15:0] select_ln603_3_fu_550_p3;
wire   [8:0] zext_ln203_fu_556_p1;
wire   [8:0] zext_ln203_1_fu_559_p1;
wire   [8:0] xor_ln203_fu_566_p2;
wire   [8:0] select_ln203_fu_572_p3;
wire   [8:0] select_ln203_2_fu_586_p3;
wire   [8:0] select_ln203_1_fu_579_p3;
wire   [8:0] xor_ln203_1_fu_593_p2;
wire   [255:0] zext_ln203_2_fu_562_p1;
wire   [255:0] zext_ln203_3_fu_599_p1;
wire   [255:0] zext_ln203_4_fu_603_p1;
wire   [255:0] zext_ln203_5_fu_607_p1;
wire   [255:0] shl_ln203_1_fu_617_p2;
wire   [255:0] lshr_ln203_fu_623_p2;
reg   [255:0] tmp_6_fu_638_p4;
wire   [255:0] xor_ln203_2_fu_653_p2;
wire   [255:0] select_ln203_3_fu_647_p3;
wire   [255:0] and_ln203_1_fu_658_p2;
wire   [255:0] and_ln203_2_fu_664_p2;
wire   [1:0] tmp_V_3_fu_712_p5;
wire   [0:0] icmp_ln30_fu_736_p2;
reg   [15:0] p_Result_s_fu_758_p4;
wire   [31:0] p_Result_11_fu_768_p3;
wire   [4:0] trunc_ln947_fu_797_p1;
wire   [15:0] zext_ln947_fu_822_p1;
wire   [15:0] lshr_ln947_fu_825_p2;
wire   [15:0] p_Result_6_fu_831_p2;
wire   [0:0] icmp_ln947_fu_852_p2;
wire   [0:0] tmp_9_fu_862_p3;
wire   [15:0] add_ln949_fu_875_p2;
wire   [0:0] p_Result_5_fu_880_p3;
wire   [0:0] xor_ln949_fu_869_p2;
wire   [0:0] and_ln949_fu_887_p2;
wire   [0:0] a_fu_857_p2;
wire   [0:0] or_ln949_fu_893_p2;
wire   [31:0] grp_fu_918_p0;
wire   [63:0] grp_fu_926_p0;
wire   [63:0] grp_fu_926_p1;
wire   [63:0] zext_ln958_fu_932_p1;
wire   [63:0] m_1_fu_935_p3;
wire   [63:0] zext_ln961_fu_941_p1;
wire   [63:0] m_2_fu_944_p2;
wire   [7:0] sub_ln964_fu_978_p2;
wire   [7:0] add_ln964_fu_983_p2;
wire   [63:0] m_6_fu_975_p1;
wire   [8:0] tmp_3_fu_988_p3;
wire   [63:0] p_Result_12_fu_995_p5;
wire   [31:0] trunc_ln738_fu_1007_p1;
wire   [31:0] bitcast_ln739_fu_1011_p1;
reg    grp_fu_235_ce;
reg    grp_fu_400_ce;
reg    grp_fu_918_ce;
reg    grp_fu_926_ce;
wire    ap_CS_fsm_state28;
wire    regslice_both_out_data_U_apdone_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_data_U_ack_in;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    regslice_both_in_last_V_U_vld_out;
wire    regslice_both_in_last_V_U_ack_in;
wire   [31:0] out_r_TDATA_int;
reg    out_r_TVALID_int;
wire    out_r_TREADY_int;
wire    regslice_both_out_data_U_vld_out;
wire    regslice_both_out_last_V_U_apdone_blk;
wire    regslice_both_out_last_V_U_ack_in_dummy;
wire    regslice_both_out_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 grp_myproject_fu_230_ap_start_reg = 1'b0;
end

myproject grp_myproject_fu_230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_myproject_fu_230_ap_start),
    .ap_done(grp_myproject_fu_230_ap_done),
    .ap_idle(grp_myproject_fu_230_ap_idle),
    .ap_ready(grp_myproject_fu_230_ap_ready),
    .dense_input_V_ap_vld(1'b1),
    .dense_input_V(in_local_V_fu_174),
    .ap_return_0(grp_myproject_fu_230_ap_return_0),
    .ap_return_1(grp_myproject_fu_230_ap_return_1),
    .ap_return_2(grp_myproject_fu_230_ap_return_2),
    .ap_return_3(grp_myproject_fu_230_ap_return_3),
    .dense_input_V_blk_n(grp_myproject_fu_230_dense_input_V_blk_n)
);

myproject_axi_fpext_32ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_3_1_U61(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_235_ce),
    .dout(grp_fu_235_p1)
);

myproject_axi_ashr_54ns_32ns_54_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
myproject_axi_ashr_54ns_32ns_54_2_1_U62(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(man_V_2_reg_1075),
    .din1(grp_fu_400_p1),
    .ce(grp_fu_400_ce),
    .dout(grp_fu_400_p2)
);

myproject_axi_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
myproject_axi_mux_42_16_1_1_U63(
    .din0(out_local_0_V_reg_1191),
    .din1(out_local_1_V_reg_1196),
    .din2(out_local_2_V_reg_1201),
    .din3(out_local_3_V_reg_1206),
    .din4(tmp_V_3_fu_712_p5),
    .dout(tmp_V_3_fu_712_p6)
);

myproject_axi_lshr_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_axi_lshr_32ns_32ns_32_2_1_U64(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_918_p0),
    .din1(add_ln958_reg_1298),
    .ce(grp_fu_918_ce),
    .dout(grp_fu_918_p2)
);

myproject_axi_shl_64ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_shl_64ns_32ns_64_2_1_U65(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_926_p0),
    .din1(grp_fu_926_p1),
    .ce(grp_fu_926_ce),
    .dout(grp_fu_926_p2)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(regslice_both_in_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int),
    .vld_in(out_r_TVALID_int),
    .ack_in(out_r_TREADY_int),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_data_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(and_ln30_reg_1237_pp1_iter7_reg),
    .vld_in(out_r_TVALID_int),
    .ack_in(regslice_both_out_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_myproject_fu_230_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state11) & (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            grp_myproject_fu_230_ap_start_reg <= 1'b1;
        end else if ((grp_myproject_fu_230_ap_ready == 1'b1)) begin
            grp_myproject_fu_230_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_696_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_0_reg_219 <= i_1_fu_702_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        i2_0_reg_219 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_0_reg_208 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_fu_238_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_208 <= i_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        is_last_0_reg_196 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        is_last_0_reg_196 <= is_last_reg_1050;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242_pp1_iter2_reg == 1'd0) & (icmp_ln27_reg_1211_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln958_reg_1298 <= add_ln958_fu_842_p2;
        icmp_ln947_1_reg_1293 <= icmp_ln947_1_fu_836_p2;
        lsb_index_reg_1282 <= lsb_index_fu_807_p2;
        sub_ln958_reg_1303 <= sub_ln958_fu_847_p2;
        tmp_8_reg_1288 <= {{lsb_index_fu_807_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter6_reg == 1'd0))) begin
        and_ln203_reg_1185 <= and_ln203_fu_629_p2;
        shl_ln203_reg_1179 <= shl_ln203_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_696_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln30_reg_1237 <= and_ln30_fu_742_p2;
        p_Result_10_reg_1226 <= tmp_V_3_fu_712_p6[32'd15];
        tmp_V_3_reg_1220 <= tmp_V_3_fu_712_p6;
        tmp_V_reg_1232 <= tmp_V_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln30_reg_1237_pp1_iter1_reg <= and_ln30_reg_1237;
        icmp_ln27_reg_1211 <= icmp_ln27_fu_696_p2;
        icmp_ln27_reg_1211_pp1_iter1_reg <= icmp_ln27_reg_1211;
        p_Result_10_reg_1226_pp1_iter1_reg <= p_Result_10_reg_1226;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        and_ln30_reg_1237_pp1_iter2_reg <= and_ln30_reg_1237_pp1_iter1_reg;
        and_ln30_reg_1237_pp1_iter3_reg <= and_ln30_reg_1237_pp1_iter2_reg;
        and_ln30_reg_1237_pp1_iter4_reg <= and_ln30_reg_1237_pp1_iter3_reg;
        and_ln30_reg_1237_pp1_iter5_reg <= and_ln30_reg_1237_pp1_iter4_reg;
        and_ln30_reg_1237_pp1_iter6_reg <= and_ln30_reg_1237_pp1_iter5_reg;
        and_ln30_reg_1237_pp1_iter7_reg <= and_ln30_reg_1237_pp1_iter6_reg;
        icmp_ln27_reg_1211_pp1_iter2_reg <= icmp_ln27_reg_1211_pp1_iter1_reg;
        icmp_ln27_reg_1211_pp1_iter3_reg <= icmp_ln27_reg_1211_pp1_iter2_reg;
        icmp_ln27_reg_1211_pp1_iter4_reg <= icmp_ln27_reg_1211_pp1_iter3_reg;
        icmp_ln27_reg_1211_pp1_iter5_reg <= icmp_ln27_reg_1211_pp1_iter4_reg;
        icmp_ln27_reg_1211_pp1_iter6_reg <= icmp_ln27_reg_1211_pp1_iter5_reg;
        icmp_ln27_reg_1211_pp1_iter7_reg <= icmp_ln27_reg_1211_pp1_iter6_reg;
        icmp_ln27_reg_1211_pp1_iter8_reg <= icmp_ln27_reg_1211_pp1_iter7_reg;
        icmp_ln935_reg_1242_pp1_iter2_reg <= icmp_ln935_reg_1242;
        icmp_ln935_reg_1242_pp1_iter3_reg <= icmp_ln935_reg_1242_pp1_iter2_reg;
        icmp_ln935_reg_1242_pp1_iter4_reg <= icmp_ln935_reg_1242_pp1_iter3_reg;
        icmp_ln935_reg_1242_pp1_iter5_reg <= icmp_ln935_reg_1242_pp1_iter4_reg;
        icmp_ln935_reg_1242_pp1_iter6_reg <= icmp_ln935_reg_1242_pp1_iter5_reg;
        icmp_ln935_reg_1242_pp1_iter7_reg <= icmp_ln935_reg_1242_pp1_iter6_reg;
        icmp_ln958_reg_1323_pp1_iter5_reg <= icmp_ln958_reg_1323;
        m_5_reg_1343_pp1_iter7_reg <= m_5_reg_1343;
        or_ln_reg_1308_pp1_iter5_reg[0] <= or_ln_reg_1308[0];
        p_Result_10_reg_1226_pp1_iter2_reg <= p_Result_10_reg_1226_pp1_iter1_reg;
        p_Result_10_reg_1226_pp1_iter3_reg <= p_Result_10_reg_1226_pp1_iter2_reg;
        p_Result_10_reg_1226_pp1_iter4_reg <= p_Result_10_reg_1226_pp1_iter3_reg;
        p_Result_10_reg_1226_pp1_iter5_reg <= p_Result_10_reg_1226_pp1_iter4_reg;
        p_Result_10_reg_1226_pp1_iter6_reg <= p_Result_10_reg_1226_pp1_iter5_reg;
        p_Result_10_reg_1226_pp1_iter7_reg <= p_Result_10_reg_1226_pp1_iter6_reg;
        tmp_V_4_reg_1247_pp1_iter2_reg <= tmp_V_4_reg_1247;
        tmp_V_4_reg_1247_pp1_iter3_reg <= tmp_V_4_reg_1247_pp1_iter2_reg;
        trunc_ln943_reg_1260_pp1_iter2_reg <= trunc_ln943_reg_1260;
        trunc_ln943_reg_1260_pp1_iter3_reg <= trunc_ln943_reg_1260_pp1_iter2_reg;
        trunc_ln943_reg_1260_pp1_iter4_reg <= trunc_ln943_reg_1260_pp1_iter3_reg;
        trunc_ln943_reg_1260_pp1_iter5_reg <= trunc_ln943_reg_1260_pp1_iter4_reg;
        trunc_ln943_reg_1260_pp1_iter6_reg <= trunc_ln943_reg_1260_pp1_iter5_reg;
        trunc_ln943_reg_1260_pp1_iter7_reg <= trunc_ln943_reg_1260_pp1_iter6_reg;
        trunc_ln944_reg_1272_pp1_iter3_reg <= trunc_ln944_reg_1272;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter3_reg == 1'd0))) begin
        and_ln585_reg_1125 <= and_ln585_fu_445_p2;
        and_ln603_reg_1130 <= and_ln603_fu_468_p2;
        or_ln603_reg_1135 <= or_ln603_fu_474_p2;
        select_ln603_1_reg_1141 <= select_ln603_1_fu_480_p3;
        sext_ln581_reg_1115 <= sext_ln581_fu_383_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln603_reg_1130_pp0_iter5_reg <= and_ln603_reg_1130;
        icmp_ln19_reg_1030_pp0_iter2_reg <= icmp_ln19_reg_1030_pp0_iter1_reg;
        icmp_ln19_reg_1030_pp0_iter3_reg <= icmp_ln19_reg_1030_pp0_iter2_reg;
        icmp_ln19_reg_1030_pp0_iter4_reg <= icmp_ln19_reg_1030_pp0_iter3_reg;
        icmp_ln19_reg_1030_pp0_iter5_reg <= icmp_ln19_reg_1030_pp0_iter4_reg;
        icmp_ln19_reg_1030_pp0_iter6_reg <= icmp_ln19_reg_1030_pp0_iter5_reg;
        icmp_ln19_reg_1030_pp0_iter7_reg <= icmp_ln19_reg_1030_pp0_iter6_reg;
        icmp_ln203_reg_1171_pp0_iter7_reg <= icmp_ln203_reg_1171;
        icmp_ln571_reg_1080_pp0_iter4_reg <= icmp_ln571_reg_1080;
        icmp_ln582_reg_1098_pp0_iter4_reg <= icmp_ln582_reg_1098;
        in_data_tmp_reg_1039_pp0_iter2_reg <= in_data_tmp_reg_1039_pp0_iter1_reg;
        in_data_tmp_reg_1039_pp0_iter3_reg <= in_data_tmp_reg_1039_pp0_iter2_reg;
        or_ln603_2_reg_1151_pp0_iter6_reg <= or_ln603_2_reg_1151;
        or_ln603_reg_1135_pp0_iter5_reg <= or_ln603_reg_1135;
        select_ln603_1_reg_1141_pp0_iter5_reg <= select_ln603_1_reg_1141;
        sext_ln581_reg_1115_pp0_iter5_reg <= sext_ln581_reg_1115;
        trunc_ln203_reg_1045_pp0_iter2_reg <= trunc_ln203_reg_1045_pp0_iter1_reg;
        trunc_ln203_reg_1045_pp0_iter3_reg <= trunc_ln203_reg_1045_pp0_iter2_reg;
        trunc_ln203_reg_1045_pp0_iter4_reg <= trunc_ln203_reg_1045_pp0_iter3_reg;
        trunc_ln203_reg_1045_pp0_iter5_reg <= trunc_ln203_reg_1045_pp0_iter4_reg;
        trunc_ln583_reg_1104_pp0_iter4_reg <= trunc_ln583_reg_1104;
        trunc_ln583_reg_1104_pp0_iter5_reg <= trunc_ln583_reg_1104_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter4_reg == 1'd0))) begin
        ashr_ln586_reg_1146 <= grp_fu_400_p2;
        or_ln603_2_reg_1151 <= or_ln603_2_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter5_reg == 1'd0))) begin
        empty_32_reg_1166[7 : 4] <= empty_32_fu_538_p2[7 : 4];
        icmp_ln203_reg_1171 <= icmp_ln203_fu_544_p2;
        shl_ln_reg_1161[7 : 4] <= shl_ln_fu_531_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter1_reg == 1'd0))) begin
        exp_tmp_V_reg_1065 <= {{ireg_V_fu_269_p1[62:52]}};
        p_Result_8_reg_1060 <= ireg_V_fu_269_p1[32'd63];
        trunc_ln556_reg_1055 <= trunc_ln556_fu_273_p1;
        trunc_ln565_reg_1070 <= trunc_ln565_fu_295_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln19_reg_1030 <= icmp_ln19_fu_238_p2;
        icmp_ln19_reg_1030_pp0_iter1_reg <= icmp_ln19_reg_1030;
        in_data_tmp_reg_1039_pp0_iter1_reg <= in_data_tmp_reg_1039;
        trunc_ln203_reg_1045_pp0_iter1_reg <= trunc_ln203_reg_1045;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter2_reg == 1'd0))) begin
        icmp_ln571_reg_1080 <= icmp_ln571_fu_326_p2;
        icmp_ln581_reg_1086 <= icmp_ln581_fu_337_p2;
        icmp_ln582_reg_1098 <= icmp_ln582_fu_363_p2;
        man_V_2_reg_1075 <= man_V_2_fu_319_p3;
        sh_amt_reg_1092 <= sh_amt_fu_355_p3;
        tmp_4_reg_1110 <= {{sh_amt_fu_355_p3[11:4]}};
        trunc_ln583_reg_1104 <= trunc_ln583_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1211 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln935_reg_1242 <= icmp_ln935_fu_748_p2;
        l_reg_1255 <= l_fu_776_p3;
        tmp_V_4_reg_1247 <= tmp_V_4_fu_753_p3;
        trunc_ln943_reg_1260 <= trunc_ln943_fu_784_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242_pp1_iter3_reg == 1'd0) & (icmp_ln27_reg_1211_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln958_reg_1323 <= icmp_ln958_fu_913_p2;
        or_ln_reg_1308[0] <= or_ln_fu_899_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_tmp_reg_1039 <= in_r_TDATA_int;
        trunc_ln203_reg_1045 <= trunc_ln203_fu_259_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        in_local_V_fu_174 <= in_local_V_1_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_fu_238_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        is_last_reg_1050 <= is_last_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242_pp1_iter4_reg == 1'd0) & (icmp_ln27_reg_1211_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln958_reg_1333 <= grp_fu_918_p2;
        shl_ln958_reg_1338 <= grp_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242_pp1_iter5_reg == 1'd0) & (icmp_ln27_reg_1211_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        m_5_reg_1343 <= {{m_2_fu_944_p2[63:1]}};
        tmp_10_reg_1348 <= m_2_fu_944_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        out_local_0_V_reg_1191 <= grp_myproject_fu_230_ap_return_0;
        out_local_1_V_reg_1196 <= grp_myproject_fu_230_ap_return_1;
        out_local_2_V_reg_1201 <= grp_myproject_fu_230_ap_return_2;
        out_local_3_V_reg_1206 <= grp_myproject_fu_230_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_reg_1030_pp0_iter5_reg == 1'd0) & (or_ln603_2_reg_1151 == 1'd1))) begin
        select_ln603_2_reg_1156 <= select_ln603_2_fu_525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242_pp1_iter6_reg == 1'd0) & (icmp_ln27_reg_1211_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln964_reg_1353[0] <= select_ln964_fu_968_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1242 == 1'd0) & (icmp_ln27_reg_1211_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sub_ln944_reg_1265 <= sub_ln944_fu_788_p2;
        sub_ln947_reg_1277 <= sub_ln947_fu_801_p2;
        trunc_ln944_reg_1272 <= trunc_ln944_fu_793_p1;
    end
end

always @ (*) begin
    if ((icmp_ln19_fu_238_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_696_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_is_last_0_phi_fu_200_p4 = is_last_reg_1050;
    end else begin
        ap_phi_mux_is_last_0_phi_fu_200_p4 = is_last_0_reg_196;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_235_ce = 1'b1;
    end else begin
        grp_fu_235_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_400_ce = 1'b1;
    end else begin
        grp_fu_400_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_918_ce = 1'b1;
    end else begin
        grp_fu_918_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_926_ce = 1'b1;
    end else begin
        grp_fu_926_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_fu_238_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_data_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln19_fu_238_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (icmp_ln27_reg_1211_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln27_reg_1211_pp1_iter7_reg == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1211_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
        out_r_TVALID_int = 1'b1;
    end else begin
        out_r_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln19_fu_238_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((icmp_ln19_fu_238_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln27_fu_696_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln27_fu_696_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (regslice_both_out_data_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_331_p2 = (12'd1075 - zext_ln461_fu_299_p1);

assign a_fu_857_p2 = (icmp_ln947_fu_852_p2 & icmp_ln947_1_reg_1293);

assign add_ln581_fu_343_p2 = ($signed(12'd4086) + $signed(F2_fu_331_p2));

assign add_ln949_fu_875_p2 = ($signed(16'd65512) + $signed(trunc_ln944_reg_1272_pp1_iter3_reg));

assign add_ln958_fu_842_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1265));

assign add_ln964_fu_983_p2 = (select_ln964_reg_1353 + sub_ln964_fu_978_p2);

assign and_ln203_1_fu_658_p2 = (xor_ln203_2_fu_653_p2 & in_local_V_fu_174);

assign and_ln203_2_fu_664_p2 = (select_ln203_3_fu_647_p3 & and_ln203_reg_1185);

assign and_ln203_fu_629_p2 = (shl_ln203_1_fu_617_p2 & lshr_ln203_fu_623_p2);

assign and_ln30_fu_742_p2 = (is_last_0_reg_196 & icmp_ln30_fu_736_p2);

assign and_ln581_fu_434_p2 = (xor_ln582_fu_428_p2 & icmp_ln581_reg_1086);

assign and_ln582_fu_492_p2 = (xor_ln571_fu_487_p2 & icmp_ln582_reg_1098_pp0_iter4_reg);

assign and_ln585_1_fu_451_p2 = (icmp_ln585_fu_386_p2 & and_ln581_fu_434_p2);

assign and_ln585_fu_445_p2 = (xor_ln585_fu_439_p2 & and_ln581_fu_434_p2);

assign and_ln603_fu_468_p2 = (xor_ln581_fu_462_p2 & icmp_ln603_fu_391_p2);

assign and_ln949_fu_887_p2 = (xor_ln949_fu_869_p2 & p_Result_5_fu_880_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd10];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln19_fu_238_p2 == 1'd0) & (in_r_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln19_fu_238_p2 == 1'd0) & (in_r_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp1_iter8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp1_iter8 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((icmp_ln27_reg_1211_pp1_iter7_reg == 1'd0) & (out_r_TREADY_int == 1'b0));
end

assign ap_block_state26_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((icmp_ln27_reg_1211_pp1_iter8_reg == 1'd0) & (out_r_TREADY_int == 1'b0));
end

assign ap_block_state27_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln19_fu_238_p2 == 1'd0) & (in_r_TVALID_int == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln696_fu_405_p1 = in_data_tmp_reg_1039_pp0_iter3_reg;

assign bitcast_ln739_fu_1011_p1 = trunc_ln738_fu_1007_p1;

assign empty_32_fu_538_p2 = (shl_ln_fu_531_p3 | 8'd15);

assign grp_fu_400_p1 = $unsigned(sext_ln581_fu_383_p1);

assign grp_fu_918_p0 = tmp_V_4_reg_1247_pp1_iter3_reg;

assign grp_fu_926_p0 = tmp_V_4_reg_1247_pp1_iter3_reg;

assign grp_fu_926_p1 = sub_ln958_reg_1303;

assign grp_myproject_fu_230_ap_start = grp_myproject_fu_230_ap_start_reg;

assign i_1_fu_702_p2 = (i2_0_reg_219 + 3'd1);

assign i_fu_244_p2 = (i_0_reg_208 + 5'd1);

assign icmp_ln19_fu_238_p2 = ((i_0_reg_208 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_544_p2 = ((shl_ln_fu_531_p3 > empty_32_fu_538_p2) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_696_p2 = ((i2_0_reg_219 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_736_p2 = ((i2_0_reg_219 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_326_p2 = ((trunc_ln556_reg_1055 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_337_p2 = (($signed(F2_fu_331_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_363_p2 = ((F2_fu_331_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_386_p2 = ((sh_amt_reg_1092 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_391_p2 = ((tmp_4_reg_1110 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_748_p2 = ((tmp_V_3_reg_1220 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_836_p2 = ((p_Result_6_fu_831_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_852_p2 = (($signed(tmp_8_reg_1288) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_913_p2 = (($signed(lsb_index_reg_1282) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_669_p2 = (and_ln203_2_fu_664_p2 | and_ln203_1_fu_658_p2);

assign ireg_V_fu_269_p1 = grp_fu_235_p1;

assign is_last_fu_263_p2 = (in_r_TLAST_int | ap_phi_mux_is_last_0_phi_fu_200_p4);


always @ (p_Result_11_fu_768_p3) begin
    if (p_Result_11_fu_768_p3[0] == 1'b1) begin
        l_fu_776_p3 = 32'd0;
    end else if (p_Result_11_fu_768_p3[1] == 1'b1) begin
        l_fu_776_p3 = 32'd1;
    end else if (p_Result_11_fu_768_p3[2] == 1'b1) begin
        l_fu_776_p3 = 32'd2;
    end else if (p_Result_11_fu_768_p3[3] == 1'b1) begin
        l_fu_776_p3 = 32'd3;
    end else if (p_Result_11_fu_768_p3[4] == 1'b1) begin
        l_fu_776_p3 = 32'd4;
    end else if (p_Result_11_fu_768_p3[5] == 1'b1) begin
        l_fu_776_p3 = 32'd5;
    end else if (p_Result_11_fu_768_p3[6] == 1'b1) begin
        l_fu_776_p3 = 32'd6;
    end else if (p_Result_11_fu_768_p3[7] == 1'b1) begin
        l_fu_776_p3 = 32'd7;
    end else if (p_Result_11_fu_768_p3[8] == 1'b1) begin
        l_fu_776_p3 = 32'd8;
    end else if (p_Result_11_fu_768_p3[9] == 1'b1) begin
        l_fu_776_p3 = 32'd9;
    end else if (p_Result_11_fu_768_p3[10] == 1'b1) begin
        l_fu_776_p3 = 32'd10;
    end else if (p_Result_11_fu_768_p3[11] == 1'b1) begin
        l_fu_776_p3 = 32'd11;
    end else if (p_Result_11_fu_768_p3[12] == 1'b1) begin
        l_fu_776_p3 = 32'd12;
    end else if (p_Result_11_fu_768_p3[13] == 1'b1) begin
        l_fu_776_p3 = 32'd13;
    end else if (p_Result_11_fu_768_p3[14] == 1'b1) begin
        l_fu_776_p3 = 32'd14;
    end else if (p_Result_11_fu_768_p3[15] == 1'b1) begin
        l_fu_776_p3 = 32'd15;
    end else if (p_Result_11_fu_768_p3[16] == 1'b1) begin
        l_fu_776_p3 = 32'd16;
    end else if (p_Result_11_fu_768_p3[17] == 1'b1) begin
        l_fu_776_p3 = 32'd17;
    end else if (p_Result_11_fu_768_p3[18] == 1'b1) begin
        l_fu_776_p3 = 32'd18;
    end else if (p_Result_11_fu_768_p3[19] == 1'b1) begin
        l_fu_776_p3 = 32'd19;
    end else if (p_Result_11_fu_768_p3[20] == 1'b1) begin
        l_fu_776_p3 = 32'd20;
    end else if (p_Result_11_fu_768_p3[21] == 1'b1) begin
        l_fu_776_p3 = 32'd21;
    end else if (p_Result_11_fu_768_p3[22] == 1'b1) begin
        l_fu_776_p3 = 32'd22;
    end else if (p_Result_11_fu_768_p3[23] == 1'b1) begin
        l_fu_776_p3 = 32'd23;
    end else if (p_Result_11_fu_768_p3[24] == 1'b1) begin
        l_fu_776_p3 = 32'd24;
    end else if (p_Result_11_fu_768_p3[25] == 1'b1) begin
        l_fu_776_p3 = 32'd25;
    end else if (p_Result_11_fu_768_p3[26] == 1'b1) begin
        l_fu_776_p3 = 32'd26;
    end else if (p_Result_11_fu_768_p3[27] == 1'b1) begin
        l_fu_776_p3 = 32'd27;
    end else if (p_Result_11_fu_768_p3[28] == 1'b1) begin
        l_fu_776_p3 = 32'd28;
    end else if (p_Result_11_fu_768_p3[29] == 1'b1) begin
        l_fu_776_p3 = 32'd29;
    end else if (p_Result_11_fu_768_p3[30] == 1'b1) begin
        l_fu_776_p3 = 32'd30;
    end else if (p_Result_11_fu_768_p3[31] == 1'b1) begin
        l_fu_776_p3 = 32'd31;
    end else begin
        l_fu_776_p3 = 32'd32;
    end
end

assign lsb_index_fu_807_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_1265));

assign lshr_ln203_fu_623_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 >> zext_ln203_5_fu_607_p1;

assign lshr_ln947_fu_825_p2 = 16'd65535 >> zext_ln947_fu_822_p1;

assign m_1_fu_935_p3 = ((icmp_ln958_reg_1323_pp1_iter5_reg[0:0] === 1'b1) ? zext_ln958_fu_932_p1 : shl_ln958_reg_1338);

assign m_2_fu_944_p2 = (m_1_fu_935_p3 + zext_ln961_fu_941_p1);

assign m_6_fu_975_p1 = m_5_reg_1343_pp1_iter7_reg;

assign man_V_1_fu_313_p2 = (54'd0 - p_Result_9_fu_309_p1);

assign man_V_2_fu_319_p3 = ((p_Result_8_reg_1060[0:0] === 1'b1) ? man_V_1_fu_313_p2 : p_Result_9_fu_309_p1);

assign or_ln581_fu_457_p2 = (or_ln582_fu_424_p2 | icmp_ln581_reg_1086);

assign or_ln582_fu_424_p2 = (icmp_ln582_reg_1098 | icmp_ln571_reg_1080);

assign or_ln603_1_fu_497_p2 = (and_ln585_reg_1125 | and_ln582_fu_492_p2);

assign or_ln603_2_fu_502_p2 = (or_ln603_reg_1135 | or_ln603_1_fu_497_p2);

assign or_ln603_fu_474_p2 = (and_ln603_fu_468_p2 | and_ln585_1_fu_451_p2);

assign or_ln949_fu_893_p2 = (and_ln949_fu_887_p2 | a_fu_857_p2);

assign or_ln_fu_899_p3 = {{31'd0}, {or_ln949_fu_893_p2}};

assign out_r_TDATA_int = ((icmp_ln935_reg_1242_pp1_iter7_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1011_p1);

assign out_r_TVALID = regslice_both_out_data_U_vld_out;

assign p_Result_11_fu_768_p3 = {{16'd65535}, {p_Result_s_fu_758_p4}};

assign p_Result_12_fu_995_p5 = {{m_6_fu_975_p1[63:32]}, {tmp_3_fu_988_p3}, {m_6_fu_975_p1[22:0]}};

assign p_Result_5_fu_880_p3 = tmp_V_4_reg_1247_pp1_iter3_reg[add_ln949_fu_875_p2];

assign p_Result_6_fu_831_p2 = (tmp_V_4_reg_1247_pp1_iter2_reg & lshr_ln947_fu_825_p2);

assign p_Result_9_fu_309_p1 = tmp_s_fu_302_p3;

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_753_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_s_fu_758_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_758_p4[ap_tvar_int_0] = tmp_V_4_fu_753_p3[15 - ap_tvar_int_0];
        end
    end
end

assign select_ln203_1_fu_579_p3 = ((icmp_ln203_reg_1171[0:0] === 1'b1) ? zext_ln203_1_fu_559_p1 : zext_ln203_fu_556_p1);

assign select_ln203_2_fu_586_p3 = ((icmp_ln203_reg_1171[0:0] === 1'b1) ? xor_ln203_fu_566_p2 : zext_ln203_fu_556_p1);

assign select_ln203_3_fu_647_p3 = ((icmp_ln203_reg_1171_pp0_iter7_reg[0:0] === 1'b1) ? tmp_6_fu_638_p4 : shl_ln203_reg_1179);

assign select_ln203_fu_572_p3 = ((icmp_ln203_reg_1171[0:0] === 1'b1) ? zext_ln203_fu_556_p1 : zext_ln203_1_fu_559_p1);

assign select_ln588_fu_416_p3 = ((tmp_5_fu_408_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_1_fu_480_p3 = ((and_ln585_fu_445_p2[0:0] === 1'b1) ? select_ln588_fu_416_p3 : trunc_ln583_reg_1104);

assign select_ln603_2_fu_525_p3 = ((or_ln603_reg_1135_pp0_iter5_reg[0:0] === 1'b1) ? select_ln603_fu_518_p3 : select_ln603_1_reg_1141_pp0_iter5_reg);

assign select_ln603_3_fu_550_p3 = ((or_ln603_2_reg_1151_pp0_iter6_reg[0:0] === 1'b1) ? select_ln603_2_reg_1156 : 16'd0);

assign select_ln603_fu_518_p3 = ((and_ln603_reg_1130_pp0_iter5_reg[0:0] === 1'b1) ? shl_ln604_fu_513_p2 : trunc_ln586_fu_507_p1);

assign select_ln964_fu_968_p3 = ((tmp_10_reg_1348[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln581_fu_383_p1 = sh_amt_reg_1092;

assign sext_ln581cast_fu_510_p1 = sext_ln581_reg_1115_pp0_iter5_reg[15:0];

assign sh_amt_fu_355_p3 = ((icmp_ln581_fu_337_p2[0:0] === 1'b1) ? add_ln581_fu_343_p2 : sub_ln581_fu_349_p2);

assign shl_ln203_1_fu_617_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 << zext_ln203_4_fu_603_p1;

assign shl_ln203_fu_611_p2 = zext_ln203_2_fu_562_p1 << zext_ln203_3_fu_599_p1;

assign shl_ln604_fu_513_p2 = trunc_ln583_reg_1104_pp0_iter5_reg << sext_ln581cast_fu_510_p1;

assign shl_ln_fu_531_p3 = {{trunc_ln203_reg_1045_pp0_iter5_reg}, {4'd0}};

assign sub_ln581_fu_349_p2 = (12'd10 - F2_fu_331_p2);

assign sub_ln944_fu_788_p2 = (32'd16 - l_reg_1255);

assign sub_ln947_fu_801_p2 = (5'd9 - trunc_ln947_fu_797_p1);

assign sub_ln958_fu_847_p2 = (32'd25 - sub_ln944_reg_1265);

assign sub_ln964_fu_978_p2 = (8'd6 - trunc_ln943_reg_1260_pp1_iter7_reg);

assign tmp_3_fu_988_p3 = {{p_Result_10_reg_1226_pp1_iter7_reg}, {add_ln964_fu_983_p2}};

assign tmp_5_fu_408_p3 = bitcast_ln696_fu_405_p1[32'd31];

integer ap_tvar_int_1;

always @ (shl_ln203_reg_1179) begin
    for (ap_tvar_int_1 = 256 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 255 - 0) begin
            tmp_6_fu_638_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_6_fu_638_p4[ap_tvar_int_1] = shl_ln203_reg_1179[255 - ap_tvar_int_1];
        end
    end
end

assign tmp_9_fu_862_p3 = lsb_index_reg_1282[32'd31];

assign tmp_V_3_fu_712_p5 = i2_0_reg_219[1:0];

assign tmp_V_4_fu_753_p3 = ((p_Result_10_reg_1226[0:0] === 1'b1) ? tmp_V_reg_1232 : tmp_V_3_reg_1220);

assign tmp_V_fu_730_p2 = (16'd0 - tmp_V_3_fu_712_p6);

assign tmp_s_fu_302_p3 = {{1'd1}, {trunc_ln565_reg_1070}};

assign trunc_ln203_fu_259_p1 = i_0_reg_208[3:0];

assign trunc_ln556_fu_273_p1 = ireg_V_fu_269_p1[62:0];

assign trunc_ln565_fu_295_p1 = ireg_V_fu_269_p1[51:0];

assign trunc_ln583_fu_369_p1 = man_V_2_fu_319_p3[15:0];

assign trunc_ln586_fu_507_p1 = ashr_ln586_reg_1146[15:0];

assign trunc_ln738_fu_1007_p1 = p_Result_12_fu_995_p5[31:0];

assign trunc_ln943_fu_784_p1 = l_fu_776_p3[7:0];

assign trunc_ln944_fu_793_p1 = sub_ln944_fu_788_p2[15:0];

assign trunc_ln947_fu_797_p1 = sub_ln944_fu_788_p2[4:0];

assign xor_ln203_1_fu_593_p2 = (select_ln203_fu_572_p3 ^ 9'd255);

assign xor_ln203_2_fu_653_p2 = (256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 ^ and_ln203_reg_1185);

assign xor_ln203_fu_566_p2 = (zext_ln203_fu_556_p1 ^ 9'd255);

assign xor_ln571_fu_487_p2 = (icmp_ln571_reg_1080_pp0_iter4_reg ^ 1'd1);

assign xor_ln581_fu_462_p2 = (or_ln581_fu_457_p2 ^ 1'd1);

assign xor_ln582_fu_428_p2 = (or_ln582_fu_424_p2 ^ 1'd1);

assign xor_ln585_fu_439_p2 = (icmp_ln585_fu_386_p2 ^ 1'd1);

assign xor_ln949_fu_869_p2 = (tmp_9_fu_862_p3 ^ 1'd1);

assign zext_ln203_1_fu_559_p1 = empty_32_reg_1166;

assign zext_ln203_2_fu_562_p1 = select_ln603_3_fu_550_p3;

assign zext_ln203_3_fu_599_p1 = select_ln203_2_fu_586_p3;

assign zext_ln203_4_fu_603_p1 = select_ln203_1_fu_579_p3;

assign zext_ln203_5_fu_607_p1 = xor_ln203_1_fu_593_p2;

assign zext_ln203_fu_556_p1 = shl_ln_reg_1161;

assign zext_ln461_fu_299_p1 = exp_tmp_V_reg_1065;

assign zext_ln947_fu_822_p1 = sub_ln947_reg_1277;

assign zext_ln958_fu_932_p1 = lshr_ln958_reg_1333;

assign zext_ln961_fu_941_p1 = or_ln_reg_1308_pp1_iter5_reg;

always @ (posedge ap_clk) begin
    shl_ln_reg_1161[3:0] <= 4'b0000;
    empty_32_reg_1166[3:0] <= 4'b1111;
    or_ln_reg_1308[31:1] <= 31'b0000000000000000000000000000000;
    or_ln_reg_1308_pp1_iter5_reg[31:1] <= 31'b0000000000000000000000000000000;
    select_ln964_reg_1353[7:1] <= 7'b0111111;
end

endmodule //myproject_axi
