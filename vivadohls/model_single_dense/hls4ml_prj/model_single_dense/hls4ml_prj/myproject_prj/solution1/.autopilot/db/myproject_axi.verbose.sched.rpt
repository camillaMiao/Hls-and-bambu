

================================================================
== Vivado HLS Report for 'myproject_axi'
================================================================
* Date:           Tue Dec 21 14:16:42 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.367 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       45|       45| 0.225 us | 0.225 us |   45|   45|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       23|       23|         9|          1|          1|    16|    yes   |
        |- Loop 2  |       12|       12|        10|          1|          1|     4|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9
  * Pipeline-1: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 2
  Pipeline-0 : II = 1, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
  Pipeline-1 : II = 1, D = 10, States = { 18 19 20 21 22 23 24 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 11 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 2 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 28 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 18 
28 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %in_data), !map !104"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_last_V), !map !110"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %out_data), !map !114"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_last_V), !map !120"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @myproject_axi_str) nounwind"   --->   Operation 33 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%in_local_V = alloca i256, align 8" [firmware/myproject_axi.cpp:16]   --->   Operation 34 'alloca' 'in_local_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %in_data, i1* %in_last_V, [5 x i8]* @p_str13, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:8]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %out_data, i1* %out_last_V, [5 x i8]* @p_str13, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:9]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str314, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:10]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.76ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 38 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.69>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%is_last_0 = phi i1 [ %is_last, %hls_label_0 ], [ false, %arrayctor.loop1.preheader ]"   --->   Operation 39 'phi' 'is_last_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ %i, %hls_label_0 ], [ 0, %arrayctor.loop1.preheader ]"   --->   Operation 40 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.36ns)   --->   "%icmp_ln19 = icmp eq i5 %i_0, -16" [firmware/myproject_axi.cpp:19]   --->   Operation 41 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 42 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [firmware/myproject_axi.cpp:19]   --->   Operation 43 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln19, label %0, label %hls_label_0" [firmware/myproject_axi.cpp:19]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%empty_31 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %in_data, i1* %in_last_V)" [firmware/myproject_axi.cpp:4]   --->   Operation 45 'read' 'empty_31' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%in_data_tmp = extractvalue { float, i1 } %empty_31, 0" [firmware/myproject_axi.cpp:4]   --->   Operation 46 'extractvalue' 'in_data_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node is_last)   --->   "%in_last_V_tmp = extractvalue { float, i1 } %empty_31, 1" [firmware/myproject_axi.cpp:4]   --->   Operation 47 'extractvalue' 'in_last_V_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 48 [3/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 48 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln203 = trunc i5 %i_0 to i4" [firmware/myproject_axi.cpp:21]   --->   Operation 49 'trunc' 'trunc_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.97ns) (out node of the LUT)   --->   "%is_last = or i1 %in_last_V_tmp, %is_last_0" [firmware/myproject_axi.cpp:22]   --->   Operation 50 'or' 'is_last' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.69>
ST_3 : Operation 51 [2/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 51 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.69>
ST_4 : Operation 52 [1/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 52 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %d_assign to i64" [firmware/myproject_axi.cpp:21]   --->   Operation 53 'bitcast' 'ireg_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln556 = trunc i64 %ireg_V to i63" [firmware/myproject_axi.cpp:21]   --->   Operation 54 'trunc' 'trunc_ln556' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%p_Result_8 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [firmware/myproject_axi.cpp:21]   --->   Operation 55 'bitselect' 'p_Result_8' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [firmware/myproject_axi.cpp:21]   --->   Operation 56 'partselect' 'exp_tmp_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg_V to i52" [firmware/myproject_axi.cpp:21]   --->   Operation 57 'trunc' 'trunc_ln565' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.23>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln461 = zext i11 %exp_tmp_V to i12" [firmware/myproject_axi.cpp:21]   --->   Operation 58 'zext' 'zext_ln461' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_s = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565)" [firmware/myproject_axi.cpp:21]   --->   Operation 59 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%p_Result_9 = zext i53 %tmp_s to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 60 'zext' 'p_Result_9' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (3.23ns)   --->   "%man_V_1 = sub i54 0, %p_Result_9" [firmware/myproject_axi.cpp:21]   --->   Operation 61 'sub' 'man_V_1' <Predicate = (!icmp_ln19 & p_Result_8)> <Delay = 3.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.94ns)   --->   "%man_V_2 = select i1 %p_Result_8, i54 %man_V_1, i54 %p_Result_9" [firmware/myproject_axi.cpp:21]   --->   Operation 62 'select' 'man_V_2' <Predicate = (!icmp_ln19)> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (2.78ns)   --->   "%icmp_ln571 = icmp eq i63 %trunc_ln556, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 63 'icmp' 'icmp_ln571' <Predicate = (!icmp_ln19)> <Delay = 2.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, %zext_ln461" [firmware/myproject_axi.cpp:21]   --->   Operation 64 'sub' 'F2' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (1.99ns)   --->   "%icmp_ln581 = icmp sgt i12 %F2, 10" [firmware/myproject_axi.cpp:21]   --->   Operation 65 'icmp' 'icmp_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (1.54ns)   --->   "%add_ln581 = add i12 -10, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 66 'add' 'add_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (1.54ns)   --->   "%sub_ln581 = sub i12 10, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 67 'sub' 'sub_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 68 'select' 'sh_amt' <Predicate = (!icmp_ln19)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (1.99ns)   --->   "%icmp_ln582 = icmp eq i12 %F2, 10" [firmware/myproject_axi.cpp:21]   --->   Operation 69 'icmp' 'icmp_ln582' <Predicate = (!icmp_ln19)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 70 'trunc' 'trunc_ln583' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt, i32 4, i32 11)" [firmware/myproject_axi.cpp:21]   --->   Operation 71 'partselect' 'tmp_4' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 3.96>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln581 = sext i12 %sh_amt to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 72 'sext' 'sext_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (1.99ns)   --->   "%icmp_ln585 = icmp ult i12 %sh_amt, 54" [firmware/myproject_axi.cpp:21]   --->   Operation 73 'icmp' 'icmp_ln585' <Predicate = (!icmp_ln19)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (1.55ns)   --->   "%icmp_ln603 = icmp eq i8 %tmp_4, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 74 'icmp' 'icmp_ln603' <Predicate = (!icmp_ln19)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln586 = zext i32 %sext_ln581 to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 75 'zext' 'zext_ln586' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 76 [2/2] (3.88ns)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 76 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln19)> <Delay = 3.88> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%bitcast_ln696 = bitcast float %in_data_tmp to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 77 'bitcast' 'bitcast_ln696' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %bitcast_ln696, i32 31)" [firmware/myproject_axi.cpp:21]   --->   Operation 78 'bitselect' 'tmp_5' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%select_ln588 = select i1 %tmp_5, i16 -1, i16 0" [firmware/myproject_axi.cpp:21]   --->   Operation 79 'select' 'select_ln588' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.97ns)   --->   "%or_ln582 = or i1 %icmp_ln571, %icmp_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 80 'or' 'or_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, true" [firmware/myproject_axi.cpp:21]   --->   Operation 81 'xor' 'xor_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, %xor_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 82 'and' 'and_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln585)   --->   "%xor_ln585 = xor i1 %icmp_ln585, true" [firmware/myproject_axi.cpp:21]   --->   Operation 83 'xor' 'xor_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln585 = and i1 %and_ln581, %xor_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 84 'and' 'and_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node or_ln603)   --->   "%and_ln585_1 = and i1 %and_ln581, %icmp_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 85 'and' 'and_ln585_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%or_ln581 = or i1 %or_ln582, %icmp_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 86 'or' 'or_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%xor_ln581 = xor i1 %or_ln581, true" [firmware/myproject_axi.cpp:21]   --->   Operation 87 'xor' 'xor_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln603 = and i1 %icmp_ln603, %xor_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 88 'and' 'and_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln603 = or i1 %and_ln603, %and_ln585_1" [firmware/myproject_axi.cpp:21]   --->   Operation 89 'or' 'or_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln603_1 = select i1 %and_ln585, i16 %select_ln588, i16 %trunc_ln583" [firmware/myproject_axi.cpp:21]   --->   Operation 90 'select' 'select_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.88>
ST_7 : Operation 91 [1/2] (3.88ns)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 91 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln19)> <Delay = 3.88> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, true" [firmware/myproject_axi.cpp:21]   --->   Operation 92 'xor' 'xor_ln571' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%and_ln582 = and i1 %icmp_ln582, %xor_ln571" [firmware/myproject_axi.cpp:21]   --->   Operation 93 'and' 'and_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%or_ln603_1 = or i1 %and_ln585, %and_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 94 'or' 'or_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln603_2 = or i1 %or_ln603, %or_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 95 'or' 'or_ln603_2' <Predicate = (!icmp_ln19)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.98>
ST_8 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 96 'trunc' 'trunc_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%sext_ln581cast = trunc i32 %sext_ln581 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 97 'trunc' 'sext_ln581cast' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%shl_ln604 = shl i16 %trunc_ln583, %sext_ln581cast" [firmware/myproject_axi.cpp:21]   --->   Operation 98 'shl' 'shl_ln604' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%select_ln603 = select i1 %and_ln603, i16 %shl_ln604, i16 %trunc_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 99 'select' 'select_ln603' <Predicate = (!icmp_ln19 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 100 [1/1] (3.98ns) (out node of the LUT)   --->   "%select_ln603_2 = select i1 %or_ln603, i16 %select_ln603, i16 %select_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 100 'select' 'select_ln603_2' <Predicate = (!icmp_ln19 & or_ln603_2)> <Delay = 3.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %trunc_ln203, i4 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 101 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%empty_32 = or i8 %shl_ln, 15" [firmware/myproject_axi.cpp:21]   --->   Operation 102 'or' 'empty_32' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (1.55ns)   --->   "%icmp_ln203 = icmp ugt i8 %shl_ln, %empty_32" [firmware/myproject_axi.cpp:21]   --->   Operation 103 'icmp' 'icmp_ln203' <Predicate = (!icmp_ln19)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.98>
ST_9 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln603_3 = select i1 %or_ln603_2, i16 %select_ln603_2, i16 0" [firmware/myproject_axi.cpp:21]   --->   Operation 104 'select' 'select_ln603_3' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %shl_ln to i9" [firmware/myproject_axi.cpp:21]   --->   Operation 105 'zext' 'zext_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i8 %empty_32 to i9" [firmware/myproject_axi.cpp:21]   --->   Operation 106 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_2 = zext i16 %select_ln603_3 to i256" [firmware/myproject_axi.cpp:21]   --->   Operation 107 'zext' 'zext_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%xor_ln203 = xor i9 %zext_ln203, 255" [firmware/myproject_axi.cpp:21]   --->   Operation 108 'xor' 'xor_ln203' <Predicate = (!icmp_ln19 & icmp_ln203)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203 = select i1 %icmp_ln203, i9 %zext_ln203, i9 %zext_ln203_1" [firmware/myproject_axi.cpp:21]   --->   Operation 109 'select' 'select_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203_1 = select i1 %icmp_ln203, i9 %zext_ln203_1, i9 %zext_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 110 'select' 'select_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln203_2 = select i1 %icmp_ln203, i9 %xor_ln203, i9 %zext_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 111 'select' 'select_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%xor_ln203_1 = xor i9 %select_ln203, 255" [firmware/myproject_axi.cpp:21]   --->   Operation 112 'xor' 'xor_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_3 = zext i9 %select_ln203_2 to i256" [firmware/myproject_axi.cpp:21]   --->   Operation 113 'zext' 'zext_ln203_3' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_4 = zext i9 %select_ln203_1 to i256" [firmware/myproject_axi.cpp:21]   --->   Operation 114 'zext' 'zext_ln203_4' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_5 = zext i9 %xor_ln203_1 to i256" [firmware/myproject_axi.cpp:21]   --->   Operation 115 'zext' 'zext_ln203_5' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (3.98ns) (out node of the LUT)   --->   "%shl_ln203 = shl i256 %zext_ln203_2, %zext_ln203_3" [firmware/myproject_axi.cpp:21]   --->   Operation 116 'shl' 'shl_ln203' <Predicate = (!icmp_ln19)> <Delay = 3.98> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%shl_ln203_1 = shl i256 -1, %zext_ln203_4" [firmware/myproject_axi.cpp:21]   --->   Operation 117 'shl' 'shl_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%lshr_ln203 = lshr i256 -1, %zext_ln203_5" [firmware/myproject_axi.cpp:21]   --->   Operation 118 'lshr' 'lshr_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (3.25ns) (out node of the LUT)   --->   "%and_ln203 = and i256 %shl_ln203_1, %lshr_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 119 'and' 'and_ln203' <Predicate = (!icmp_ln19)> <Delay = 3.25> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 1.55>
ST_10 : Operation 120 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str415)" [firmware/myproject_axi.cpp:19]   --->   Operation 120 'specregionbegin' 'tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_10 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:20]   --->   Operation 121 'specpipeline' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "%in_local_V_load = load i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 122 'load' 'in_local_V_load' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_10 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%tmp_6 = call i256 @llvm.part.select.i256(i256 %shl_ln203, i32 255, i32 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 123 'partselect' 'tmp_6' <Predicate = (!icmp_ln19 & icmp_ln203)> <Delay = 0.00>
ST_10 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%select_ln203_3 = select i1 %icmp_ln203, i256 %tmp_6, i256 %shl_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 124 'select' 'select_ln203_3' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%xor_ln203_2 = xor i256 %and_ln203, -1" [firmware/myproject_axi.cpp:21]   --->   Operation 125 'xor' 'xor_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_1 = and i256 %in_local_V_load, %xor_ln203_2" [firmware/myproject_axi.cpp:21]   --->   Operation 126 'and' 'and_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_2 = and i256 %select_ln203_3, %and_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 127 'and' 'and_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 128 [1/1] (1.55ns) (out node of the LUT)   --->   "%in_local_V_1 = or i256 %and_ln203_1, %and_ln203_2" [firmware/myproject_axi.cpp:21]   --->   Operation 128 'or' 'in_local_V_1' <Predicate = (!icmp_ln19)> <Delay = 1.55> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "store i256 %in_local_V_1, i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 129 'store' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str415, i32 %tmp)" [firmware/myproject_axi.cpp:23]   --->   Operation 130 'specregionend' 'empty_33' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 131 'br' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 11 <SV = 2> <Delay = 3.34>
ST_11 : Operation 132 [7/7] (3.34ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 132 'call' 'call_ret' <Predicate = true> <Delay = 3.34> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 3> <Delay = 4.19>
ST_12 : Operation 133 [6/7] (4.19ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 133 'call' 'call_ret' <Predicate = true> <Delay = 4.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 4> <Delay = 4.19>
ST_13 : Operation 134 [5/7] (4.19ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 134 'call' 'call_ret' <Predicate = true> <Delay = 4.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 5> <Delay = 4.19>
ST_14 : Operation 135 [4/7] (4.19ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 135 'call' 'call_ret' <Predicate = true> <Delay = 4.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 6> <Delay = 4.19>
ST_15 : Operation 136 [3/7] (4.19ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 136 'call' 'call_ret' <Predicate = true> <Delay = 4.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 7> <Delay = 4.19>
ST_16 : Operation 137 [2/7] (4.19ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 137 'call' 'call_ret' <Predicate = true> <Delay = 4.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 8> <Delay = 3.90>
ST_17 : Operation 138 [1/7] (3.90ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 138 'call' 'call_ret' <Predicate = true> <Delay = 3.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 139 [1/1] (0.00ns)   --->   "%out_local_0_V = extractvalue { i16, i16, i16, i16 } %call_ret, 0"   --->   Operation 139 'extractvalue' 'out_local_0_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 140 [1/1] (0.00ns)   --->   "%out_local_1_V = extractvalue { i16, i16, i16, i16 } %call_ret, 1"   --->   Operation 140 'extractvalue' 'out_local_1_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 141 [1/1] (0.00ns)   --->   "%out_local_2_V = extractvalue { i16, i16, i16, i16 } %call_ret, 2"   --->   Operation 141 'extractvalue' 'out_local_2_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 142 [1/1] (0.00ns)   --->   "%out_local_3_V = extractvalue { i16, i16, i16, i16 } %call_ret, 3"   --->   Operation 142 'extractvalue' 'out_local_3_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 143 [1/1] (1.76ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 143 'br' <Predicate = true> <Delay = 1.76>

State 18 <SV = 9> <Delay = 4.03>
ST_18 : Operation 144 [1/1] (0.00ns)   --->   "%i2_0 = phi i3 [ 0, %0 ], [ %i_1, %hls_label_1 ]"   --->   Operation 144 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 145 [1/1] (1.13ns)   --->   "%icmp_ln27 = icmp eq i3 %i2_0, -4" [firmware/myproject_axi.cpp:27]   --->   Operation 145 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 146 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 146 'speclooptripcount' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 147 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i2_0, 1" [firmware/myproject_axi.cpp:27]   --->   Operation 147 'add' 'i_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 148 [1/1] (0.00ns)   --->   "br i1 %icmp_ln27, label %2, label %hls_label_1" [firmware/myproject_axi.cpp:27]   --->   Operation 148 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln935 = trunc i3 %i2_0 to i2" [firmware/myproject_axi.cpp:29]   --->   Operation 149 'trunc' 'trunc_ln935' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_18 : Operation 150 [1/1] (1.95ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_Mux.ap_auto.4i16.i2(i16 %out_local_0_V, i16 %out_local_1_V, i16 %out_local_2_V, i16 %out_local_3_V, i2 %trunc_ln935)" [firmware/myproject_axi.cpp:29]   --->   Operation 150 'mux' 'tmp_V_3' <Predicate = (!icmp_ln27)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 151 [1/1] (0.00ns)   --->   "%p_Result_10 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_3, i32 15)" [firmware/myproject_axi.cpp:29]   --->   Operation 151 'bitselect' 'p_Result_10' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_18 : Operation 152 [1/1] (2.07ns)   --->   "%tmp_V = sub i16 0, %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 152 'sub' 'tmp_V' <Predicate = (!icmp_ln27)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 153 [1/1] (1.13ns)   --->   "%icmp_ln30 = icmp eq i3 %i2_0, 3" [firmware/myproject_axi.cpp:30]   --->   Operation 153 'icmp' 'icmp_ln30' <Predicate = (!icmp_ln27)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 154 [1/1] (0.97ns)   --->   "%and_ln30 = and i1 %is_last_0, %icmp_ln30" [firmware/myproject_axi.cpp:30]   --->   Operation 154 'and' 'and_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 10> <Delay = 4.20>
ST_19 : Operation 155 [1/1] (2.42ns)   --->   "%icmp_ln935 = icmp eq i16 %tmp_V_3, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 155 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln27)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 156 [1/1] (0.80ns)   --->   "%tmp_V_4 = select i1 %p_Result_10, i16 %tmp_V, i16 %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 156 'select' 'tmp_V_4' <Predicate = (!icmp_ln27)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 157 [1/1] (0.00ns)   --->   "%p_Result_s = call i16 @llvm.part.select.i16(i16 %tmp_V_4, i32 15, i32 0) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 157 'partselect' 'p_Result_s' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_19 : Operation 158 [1/1] (0.00ns)   --->   "%p_Result_11 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 -1, i16 %p_Result_s)" [firmware/myproject_axi.cpp:29]   --->   Operation 158 'bitconcatenate' 'p_Result_11' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_19 : Operation 159 [1/1] (3.39ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_11, i1 true) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 159 'cttz' 'l' <Predicate = (!icmp_ln27)> <Delay = 3.39> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_19 : Operation 160 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [firmware/myproject_axi.cpp:29]   --->   Operation 160 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 20 <SV = 11> <Delay = 4.33>
ST_20 : Operation 161 [1/1] (2.55ns)   --->   "%sub_ln944 = sub nsw i32 16, %l" [firmware/myproject_axi.cpp:29]   --->   Operation 161 'sub' 'sub_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i16" [firmware/myproject_axi.cpp:29]   --->   Operation 162 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_20 : Operation 163 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [firmware/myproject_axi.cpp:29]   --->   Operation 163 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_20 : Operation 164 [1/1] (1.78ns)   --->   "%sub_ln947 = sub i5 9, %trunc_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 164 'sub' 'sub_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 12> <Delay = 2.66>
ST_21 : Operation 165 [1/1] (2.55ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 165 'add' 'lsb_index' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 166 [1/1] (0.00ns)   --->   "%tmp_8 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 166 'partselect' 'tmp_8' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_21 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i16" [firmware/myproject_axi.cpp:29]   --->   Operation 167 'zext' 'zext_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_21 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i16 -1, %zext_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 168 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_6 = and i16 %tmp_V_4, %lshr_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 169 'and' 'p_Result_6' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 170 [1/1] (2.66ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i16 %p_Result_6, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 170 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 171 [1/1] (2.55ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 171 'add' 'add_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 172 [1/1] (2.55ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 172 'sub' 'sub_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 13> <Delay = 3.60>
ST_22 : Operation 173 [1/1] (2.47ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_8, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 173 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [firmware/myproject_axi.cpp:29]   --->   Operation 174 'and' 'a' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 175 'bitselect' 'tmp_9' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_22 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_9, true" [firmware/myproject_axi.cpp:29]   --->   Operation 176 'xor' 'xor_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 177 [1/1] (2.07ns)   --->   "%add_ln949 = add i16 -24, %trunc_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 177 'add' 'add_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_5 = call i1 @_ssdm_op_BitSelect.i1.i16.i16(i16 %tmp_V_4, i16 %add_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 178 'bitselect' 'p_Result_5' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_22 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_5, %xor_ln949" [firmware/myproject_axi.cpp:29]   --->   Operation 179 'and' 'and_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949 = or i1 %and_ln949, %a" [firmware/myproject_axi.cpp:29]   --->   Operation 180 'or' 'or_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 181 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 181 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.97>
ST_22 : Operation 182 [1/1] (0.00ns)   --->   "%m = zext i16 %tmp_V_4 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 182 'zext' 'm' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_22 : Operation 183 [1/1] (0.00ns)   --->   "%zext_ln957_1 = zext i16 %tmp_V_4 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 183 'zext' 'zext_ln957_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_22 : Operation 184 [1/1] (2.47ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 184 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 185 [2/2] (3.60ns)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 185 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln958_1 = zext i32 %sub_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 186 'zext' 'zext_ln958_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_22 : Operation 187 [2/2] (3.60ns)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:29]   --->   Operation 187 'shl' 'shl_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 14> <Delay = 3.60>
ST_23 : Operation 188 [1/2] (3.60ns)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 188 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 189 [1/2] (3.60ns)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:29]   --->   Operation 189 'shl' 'shl_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 15> <Delay = 3.52>
ST_24 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958 = zext i32 %lshr_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 190 'zext' 'zext_ln958' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_24 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i64 %zext_ln958, i64 %shl_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 191 'select' 'm_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln961 = zext i32 %or_ln to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 192 'zext' 'zext_ln961' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_24 : Operation 193 [1/1] (3.52ns) (out node of the LUT)   --->   "%m_2 = add i64 %m_1, %zext_ln961" [firmware/myproject_axi.cpp:29]   --->   Operation 193 'add' 'm_2' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 194 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [firmware/myproject_axi.cpp:29]   --->   Operation 194 'partselect' 'm_5' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_24 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 25)" [firmware/myproject_axi.cpp:29]   --->   Operation 195 'bitselect' 'tmp_10' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>

State 25 <SV = 16> <Delay = 1.24>
ST_25 : Operation 196 [1/1] (1.24ns)   --->   "%select_ln964 = select i1 %tmp_10, i8 127, i8 126" [firmware/myproject_axi.cpp:29]   --->   Operation 196 'select' 'select_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 26 <SV = 17> <Delay = 4.36>
ST_26 : Operation 197 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 197 'zext' 'm_6' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_26 : Operation 198 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 6, %trunc_ln943" [firmware/myproject_axi.cpp:29]   --->   Operation 198 'sub' 'sub_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 199 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %select_ln964, %sub_ln964" [firmware/myproject_axi.cpp:29]   --->   Operation 199 'add' 'add_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_3 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_10, i8 %add_ln964)" [firmware/myproject_axi.cpp:29]   --->   Operation 200 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_26 : Operation 201 [1/1] (0.00ns)   --->   "%p_Result_12 = call i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32(i64 %m_6, i9 %tmp_3, i32 23, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 201 'partset' 'p_Result_12' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_26 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln738 = trunc i64 %p_Result_12 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 202 'trunc' 'trunc_ln738' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_26 : Operation 203 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %trunc_ln738 to float" [firmware/myproject_axi.cpp:29]   --->   Operation 203 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_26 : Operation 204 [1/1] (0.69ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [firmware/myproject_axi.cpp:29]   --->   Operation 204 'select' 'select_ln935' <Predicate = (!icmp_ln27)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 205 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 205 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 27 <SV = 18> <Delay = 0.00>
ST_27 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str516)" [firmware/myproject_axi.cpp:27]   --->   Operation 206 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 207 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:28]   --->   Operation 207 'specpipeline' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 208 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 208 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_27 : Operation 209 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str516, i32 %tmp_2)" [firmware/myproject_axi.cpp:31]   --->   Operation 209 'specregionend' 'empty_35' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 210 [1/1] (0.00ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 210 'br' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 28 <SV = 10> <Delay = 0.00>
ST_28 : Operation 211 [1/1] (0.00ns)   --->   "ret void" [firmware/myproject_axi.cpp:32]   --->   Operation 211 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('is_last') with incoming values : ('is_last', firmware/myproject_axi.cpp:22) [16]  (1.77 ns)

 <State 2>: 3.7ns
The critical path consists of the following:
	axis read on port 'in_data' (firmware/myproject_axi.cpp:4) [25]  (0 ns)
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [28]  (3.7 ns)

 <State 3>: 3.7ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [28]  (3.7 ns)

 <State 4>: 3.7ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [28]  (3.7 ns)

 <State 5>: 4.23ns
The critical path consists of the following:
	'sub' operation ('F2', firmware/myproject_axi.cpp:21) [40]  (1.55 ns)
	'icmp' operation ('icmp_ln581', firmware/myproject_axi.cpp:21) [41]  (1.99 ns)
	'select' operation ('sh_amt', firmware/myproject_axi.cpp:21) [44]  (0.697 ns)

 <State 6>: 3.96ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln585', firmware/myproject_axi.cpp:21) [48]  (1.99 ns)
	'xor' operation ('xor_ln585', firmware/myproject_axi.cpp:21) [64]  (0 ns)
	'and' operation ('and_ln585', firmware/myproject_axi.cpp:21) [65]  (0.978 ns)
	'select' operation ('select_ln603_1', firmware/myproject_axi.cpp:21) [72]  (0.993 ns)

 <State 7>: 3.88ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln586', firmware/myproject_axi.cpp:21) [52]  (3.88 ns)

 <State 8>: 3.99ns
The critical path consists of the following:
	'select' operation ('select_ln603', firmware/myproject_axi.cpp:21) [70]  (0 ns)
	'select' operation ('select_ln603_2', firmware/myproject_axi.cpp:21) [74]  (3.99 ns)

 <State 9>: 3.99ns
The critical path consists of the following:
	'select' operation ('select_ln603_3', firmware/myproject_axi.cpp:21) [76]  (0 ns)
	'shl' operation ('shl_ln203', firmware/myproject_axi.cpp:21) [93]  (3.99 ns)

 <State 10>: 1.55ns
The critical path consists of the following:
	'load' operation ('in_local_V_load', firmware/myproject_axi.cpp:21) on local variable 'in_local.V', firmware/myproject_axi.cpp:16 [77]  (0 ns)
	'and' operation ('and_ln203_1', firmware/myproject_axi.cpp:21) [100]  (0 ns)
	'or' operation ('in_local.V', firmware/myproject_axi.cpp:21) [102]  (1.55 ns)

 <State 11>: 3.35ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (3.35 ns)

 <State 12>: 4.2ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (4.2 ns)

 <State 13>: 4.2ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (4.2 ns)

 <State 14>: 4.2ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (4.2 ns)

 <State 15>: 4.2ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (4.2 ns)

 <State 16>: 4.2ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (4.2 ns)

 <State 17>: 3.9ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [108]  (3.9 ns)

 <State 18>: 4.04ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:27) [115]  (0 ns)
	'mux' operation ('tmp.V', firmware/myproject_axi.cpp:29) [124]  (1.96 ns)
	'sub' operation ('tmp.V', firmware/myproject_axi.cpp:29) [127]  (2.08 ns)

 <State 19>: 4.2ns
The critical path consists of the following:
	'select' operation ('tmp.V', firmware/myproject_axi.cpp:29) [128]  (0.805 ns)
	'cttz' operation ('l', firmware/myproject_axi.cpp:29) [131]  (3.4 ns)

 <State 20>: 4.33ns
The critical path consists of the following:
	'sub' operation ('sub_ln944', firmware/myproject_axi.cpp:29) [132]  (2.55 ns)
	'sub' operation ('sub_ln947', firmware/myproject_axi.cpp:29) [138]  (1.78 ns)

 <State 21>: 2.67ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln947', firmware/myproject_axi.cpp:29) [140]  (0 ns)
	'and' operation ('__Result__', firmware/myproject_axi.cpp:29) [141]  (0 ns)
	'icmp' operation ('icmp_ln947_1', firmware/myproject_axi.cpp:29) [142]  (2.67 ns)

 <State 22>: 3.61ns
The critical path consists of the following:
	'shl' operation ('shl_ln958', firmware/myproject_axi.cpp:29) [159]  (3.61 ns)

 <State 23>: 3.61ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln958', firmware/myproject_axi.cpp:29) [155]  (3.61 ns)

 <State 24>: 3.52ns
The critical path consists of the following:
	'select' operation ('m', firmware/myproject_axi.cpp:29) [160]  (0 ns)
	'add' operation ('m', firmware/myproject_axi.cpp:29) [162]  (3.52 ns)

 <State 25>: 1.25ns
The critical path consists of the following:
	'select' operation ('select_ln964', firmware/myproject_axi.cpp:29) [166]  (1.25 ns)

 <State 26>: 4.37ns
The critical path consists of the following:
	'sub' operation ('sub_ln964', firmware/myproject_axi.cpp:29) [168]  (0 ns)
	'add' operation ('add_ln964', firmware/myproject_axi.cpp:29) [169]  (3.67 ns)
	'select' operation ('select_ln935', firmware/myproject_axi.cpp:29) [174]  (0.698 ns)

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
